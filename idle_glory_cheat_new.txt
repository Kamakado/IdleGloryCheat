var newMultiply = 3;

var newDamage = [];
var newHP = [];

var iCounter = 0;

while(iCounter < this.InfoManager.instance.playerInfo.heros.length)
{
	newDamage[iCounter] = this.InfoManager.instance.playerInfo.heros[iCounter][0][3][0];
	newDamage[iCounter] *= newMultiply;
	
	console.log("newDamate[" + iCounter + "] = " + newDamage[iCounter]);
	
	newHP[iCounter] = this.InfoManager.instance.playerInfo.heros[iCounter][0][3][1];
	newHP[iCounter] *= newMultiply;
	
	console.log("newHP[" + iCounter + "] = " + newHP[iCounter]);
	
	iCounter++;
}

setTimeout(updateStats, 1000);

function updateStats()
{
	var bFlag = false;
	var bFlagStats = [false, false, false, false, false];
	//check stats
	iCounter = 0;
	while(iCounter < this.InfoManager.instance.playerInfo.heros.length)
	{
		if(newDamage[iCounter] != this.InfoManager.instance.playerInfo.heros[iCounter][0][3][0]
		||
		newHP[iCounter] != this.InfoManager.instance.playerInfo.heros[iCounter][0][3][1])
		{
			bFlag = true;
			bFlagStats[iCounter] = true;
		}
		iCounter++;
	}
	
	if(bFlag == true)
	{
		iCounter = 0;
		while(iCounter < this.InfoManager.instance.playerInfo.heros.length)
		{
			var iCounterStats = 0;
			if(bFlagStats[iCounter] == true)
			{
				while(iCounterStats < 28)
				{
					if(iCounterStats == 0)
					{
						newDamage[iCounter] = this.InfoManager.instance.playerInfo.heros[iCounter][0][3][iCounterStats];
						newDamage[iCounter] *= newMultiply;
						
						console.log("newDamate[" + iCounter + "] = " + newDamage[iCounter]);
					}
					if(iCounterStats == 1)
					{
						newHP[iCounter] = this.InfoManager.instance.playerInfo.heros[iCounter][0][3][iCounterStats];
						newHP[iCounter] *= newMultiply;
						
						console.log("newHP[" + iCounter + "] = " + newHP[iCounter]);
					}
					this.InfoManager.instance.playerInfo.heros[iCounter][0][3][iCounterStats] *= newMultiply;
					iCounterStats++;
				}
			}
			bFlagStats[iCounter] = false;
			iCounter++;
		}
	}
	
	bFlag = false;
	
	setTimeout(updateStats, 1000);
}
